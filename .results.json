{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 6,
    "pending": 0,
    "failures": 2,
    "start": "2023-09-22T18:49:30.465Z",
    "end": "2023-09-22T18:49:31.116Z",
    "duration": 651
  },
  "tests": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'This one is on me' to equal 'This one is on me!'",
        "showDiff": true,
        "actual": "This one is on me",
        "expected": "This one is on me!",
        "stack": "AssertionError: expected 'This one is on me' to equal 'This one is on me!'\n    at Context.<anonymous> (test/indexTest.js:4:45)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Bye' to equal 'Bye.'",
        "showDiff": true,
        "actual": "Bye",
        "expected": "Bye.",
        "stack": "AssertionError: expected 'Bye' to equal 'Bye.'\n    at Context.<anonymous> (test/indexTest.js:36:64)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'This one is on me' to equal 'This one is on me!'",
        "showDiff": true,
        "actual": "This one is on me",
        "expected": "This one is on me!",
        "stack": "AssertionError: expected 'This one is on me' to equal 'This one is on me!'\n    at Context.<anonymous> (test/indexTest.js:4:45)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Bye' to equal 'Bye.'",
        "showDiff": true,
        "actual": "Bye",
        "expected": "Bye.",
        "stack": "AssertionError: expected 'Bye' to equal 'Bye.'\n    at Context.<anonymous> (test/indexTest.js:36:64)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}